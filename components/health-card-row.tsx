/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/uPzyQSus1dG
 */
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { ResponsiveLine } from "@nivo/line"
import { ResponsiveBar } from "@nivo/bar"

export function HealthCardRow() {
  return (
    <div className="flex flex-col gap-6">
      <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card className="rounded-2xl bg-yellow-500 dark:bg-yellow-400">
          <CardHeader className="flex flex-row items-start gap-4 p-6">
            <div className="grid gap-1.5">
              <CardTitle className="text-black">Heart Rate</CardTitle>
              <CardDescription className="text-black">Last updated 5 min ago</CardDescription>
            </div>
            <Button className="ml-auto w-8 h-8 rounded-full border" size="icon" variant="outline">
              <PlusIcon className="w-4 h-4" />
              <span className="sr-only">Add</span>
            </Button>
          </CardHeader>
          <CardContent className="flex items-center justify-center p-6">
            <CurvedlineChart className="h-[100px] w-full aspect-[2/1]" />
          </CardContent>
        </Card>
        <Card className="rounded-2xl bg-yellow-500 dark:bg-yellow-400">
          <CardHeader className="flex flex-row items-start gap-4 p-6">
            <div className="grid gap-1.5">
              <CardTitle className="text-black-500">Steps Taken</CardTitle>
              <CardDescription className="text-black-500">Today</CardDescription>
            </div>
            <Button className="ml-auto w-8 h-8 rounded-full border" size="icon" variant="outline">
              <PlusIcon className="w-4 h-4" />
              <span className="sr-only">Add</span>
            </Button>
          </CardHeader>
          <CardContent className="flex items-center justify-center p-6">
            <BarChart className="h-[100px] w-full aspect-[2/1]" />
          </CardContent>
        </Card>
        <Card className="rounded-2xl bg-yellow-500 dark:bg-yellow-400">
          <CardHeader className="flex flex-row items-start gap-4 p-6">
            <div className="grid gap-1.5">
              <CardTitle>Calories Burned</CardTitle>
              <CardDescription>Today</CardDescription>
            </div>
            <Button className="ml-auto w-8 h-8 rounded-full border" size="icon" variant="outline">
              <PlusIcon className="w-4 h-4" />
              <span className="sr-only">Add</span>
            </Button>
          </CardHeader>
          <CardContent className="flex items-center justify-center p-6">
            <CurvedlineChart className="h-[100px] w-full aspect-[2/1]" />
          </CardContent>
        </Card>
        <Card className="rounded-2xl bg-yellow-500 dark:bg-yellow-400">
          <CardHeader className="flex flex-row items-start gap-4 p-6">
            <div className="grid gap-1.5">
              <CardTitle>Sleep Analysis</CardTitle>
              <CardDescription>Last night</CardDescription>
            </div>
            <Button className="ml-auto w-8 h-8 rounded-full border" size="icon" variant="outline">
              <PlusIcon className="w-4 h-4" />
              <span className="sr-only">Add</span>
            </Button>
          </CardHeader>
          <CardContent className="flex items-center justify-center p-6">
            <BarChart className="h-[100px] w-full aspect-[2/1]" />
          </CardContent>
        </Card>
      </div>
    </div>
  )
}


function PlusIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>
  )
}


function CurvedlineChart(props) {
  return (
    <div {...props}>
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "Jan", y: 43 },
              { x: "Feb", y: 137 },
              { x: "Mar", y: 61 },
              { x: "Apr", y: 145 },
              { x: "May", y: 26 },
              { x: "Jun", y: 154 },
            ],
          },
          {
            id: "Mobile",
            data: [
              { x: "Jan", y: 60 },
              { x: "Feb", y: 48 },
              { x: "Mar", y: 177 },
              { x: "Apr", y: 78 },
              { x: "May", y: 96 },
              { x: "Jun", y: 204 },
            ],
          },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "point",
        }}
        yScale={{
          type: "linear",
          min: 0,
          max: "auto",
        }}
        curve="monotoneX"
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#2563eb", "#e11d48"]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application"
      />
    </div>
  )
}


function BarChart(props) {
  return (
    <div {...props}>
      <ResponsiveBar
        data={[
          { name: "Jan", count: 111 },
          { name: "Feb", count: 157 },
          { name: "Mar", count: 129 },
          { name: "Apr", count: 150 },
          { name: "May", count: 119 },
          { name: "Jun", count: 72 },
        ]}
        keys={["count"]}
        indexBy="name"
        margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
        padding={0.3}
        colors={["#2563eb"]}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 4,
          tickPadding: 16,
        }}
        gridYValues={4}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        tooltipLabel={({ id }) => `${id}`}
        enableLabel={false}
        role="application"
        ariaLabel="A bar chart showing data"
      />
    </div>
  )
}
